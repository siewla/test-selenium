{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2021-02-25T04:45:44.020Z",
    "end": "2021-02-25T04:45:51.940Z",
    "duration": 7920,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f0f091ae-0b7e-4055-a1ef-53c47e893111",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "22391d27-3936-41eb-ba9e-84679b783742",
          "title": "Suite",
          "fullFile": "/Users/siewlapang/Desktop/test-selenium/src/test/test.ts",
          "file": "/src/test/test.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Before in \"Suite\"",
              "fullTitle": "Suite \"before all\" hook: Before in \"Suite\"",
              "timedOut": false,
              "duration": 3,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            driver = new selenium_webdriver_1.Builder().forBrowser('chrome').build();\n            return [2 /*return*/];\n        });\n    });",
              "err": {},
              "uuid": "9518a041-83fc-452e-82d4-d94e89d7cff7",
              "parentUUID": "22391d27-3936-41eb-ba9e-84679b783742",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: After in \"Suite\"",
              "fullTitle": "Suite \"after all\" hook: After in \"Suite\"",
              "timedOut": false,
              "duration": 53,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, driver.quit()];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });",
              "err": {},
              "uuid": "f504db7d-2ca3-4f12-8543-f8bbad86f08d",
              "parentUUID": "22391d27-3936-41eb-ba9e-84679b783742",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Open website and verify it is opened and redirect to login",
              "fullTitle": "Suite Open website and verify it is opened and redirect to login",
              "timedOut": false,
              "duration": 3953,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n        var currentUrl;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: \n                // await driver.get('https://angular-e2e.herokuapp.com/login');\n                return [4 /*yield*/, driver.get('http://localhost:4200/login')];\n                case 1:\n                    // await driver.get('https://angular-e2e.herokuapp.com/login');\n                    _a.sent();\n                    return [4 /*yield*/, driver.getCurrentUrl()];\n                case 2:\n                    currentUrl = _a.sent();\n                    assert.equal(\n                    // 'https://angular-e2e.herokuapp.com/login',\n                    'http://localhost:4200/login', currentUrl, 'The website is not opened and redirect');\n                    return [2 /*return*/];\n            }\n        });\n    });",
              "err": {},
              "uuid": "6d8c6650-e037-46c0-b7d7-51e051196331",
              "parentUUID": "22391d27-3936-41eb-ba9e-84679b783742",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "key in invalid email and password",
              "fullTitle": "Suite key in invalid email and password",
              "timedOut": false,
              "duration": 525,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n        var valid_email, valid_password, getEmailTextField, getPasswordTextField, getLoginButton, getAlertMsg;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    valid_email = 'wrong';\n                    valid_password = 'wrong';\n                    return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.css('input[formControlName=email]'))];\n                case 1:\n                    getEmailTextField = _a.sent();\n                    return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.css('input[formControlName=password]'))];\n                case 2:\n                    getPasswordTextField = _a.sent();\n                    getEmailTextField.sendKeys(valid_email);\n                    getPasswordTextField.sendKeys(valid_password);\n                    return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.id('login'))];\n                case 3:\n                    getLoginButton = _a.sent();\n                    return [4 /*yield*/, getLoginButton.click()];\n                case 4:\n                    _a.sent();\n                    return [4 /*yield*/, driver.wait(selenium_webdriver_1.until.elementLocated(selenium_webdriver_1.By.className('alert')), 10000)];\n                case 5:\n                    _a.sent();\n                    return [4 /*yield*/, driver\n                            .findElement(selenium_webdriver_1.By.xpath(\"//div[contains(text(),'Invalid Email Format')]\"))\n                            .getText()];\n                case 6:\n                    getAlertMsg = _a.sent();\n                    assert.equal(getAlertMsg, 'Invalid Email Format', 'Wrong credentials keyed in');\n                    return [2 /*return*/];\n            }\n        });\n    });",
              "err": {},
              "uuid": "b23925f7-8b8f-48fb-b9d1-c1408ec35314",
              "parentUUID": "22391d27-3936-41eb-ba9e-84679b783742",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "key in valid email and password",
              "fullTitle": "Suite key in valid email and password",
              "timedOut": false,
              "duration": 1947,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n        var valid_email, valid_password, getEmailTextField, getPasswordTextField, getLoginButton, currentUrl;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    valid_email = 'admin@mail.com';\n                    valid_password = '123';\n                    return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.css('input[formControlName=email]'))];\n                case 1:\n                    getEmailTextField = _a.sent();\n                    return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.css('input[formControlName=password]'))];\n                case 2:\n                    getPasswordTextField = _a.sent();\n                    return [4 /*yield*/, getEmailTextField.clear()];\n                case 3:\n                    _a.sent();\n                    return [4 /*yield*/, getPasswordTextField.clear()];\n                case 4:\n                    _a.sent();\n                    getEmailTextField.sendKeys(valid_email);\n                    getPasswordTextField.sendKeys(valid_password);\n                    return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.id('login'))];\n                case 5:\n                    getLoginButton = _a.sent();\n                    return [4 /*yield*/, getLoginButton.click()];\n                case 6:\n                    _a.sent();\n                    return [4 /*yield*/, driver.wait(selenium_webdriver_1.until.urlIs(\n                        // `https://angular-e2e.herokuapp.com/agent/${agentID}`,\n                        \"http://localhost:4200/agent/\" + agentID), 15000)];\n                case 7:\n                    _a.sent();\n                    return [4 /*yield*/, driver.getCurrentUrl()];\n                case 8:\n                    currentUrl = _a.sent();\n                    assert.equal(\n                    // `https://angular-e2e.herokuapp.com/agent/${agentID}`,\n                    \"http://localhost:4200/agent/\" + agentID, currentUrl, 'Valid credentials keyed in and redirect');\n                    return [2 /*return*/];\n            }\n        });\n    });",
              "err": {},
              "uuid": "55e002d0-51cc-4c7c-a58e-215ba9a8261d",
              "parentUUID": "22391d27-3936-41eb-ba9e-84679b783742",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "go to register new customer tab",
              "fullTitle": "Suite go to register new customer tab",
              "timedOut": false,
              "duration": 163,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n        var getRegisterButton, currentUrl;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.xpath(\"//button[normalize-space()='Register New Customer']\"))];\n                case 1:\n                    getRegisterButton = _a.sent();\n                    return [4 /*yield*/, getRegisterButton.click()];\n                case 2:\n                    _a.sent();\n                    return [4 /*yield*/, driver.wait(selenium_webdriver_1.until.urlIs(\n                        // `https://angular-e2e.herokuapp.com/register/${agentID}`,\n                        \"http://localhost:4200/register/\" + agentID), 10000)];\n                case 3:\n                    _a.sent();\n                    return [4 /*yield*/, driver.getCurrentUrl()];\n                case 4:\n                    currentUrl = _a.sent();\n                    assert.equal(currentUrl, \n                    // `https://angular-e2e.herokuapp.com/register/${agentID}`,\n                    \"http://localhost:4200/register/\" + agentID, 'Successfuly navigate to register new customer page');\n                    return [2 /*return*/];\n            }\n        });\n    });",
              "err": {},
              "uuid": "219b98ed-f2ce-4834-9c4e-d51633dc5c33",
              "parentUUID": "22391d27-3936-41eb-ba9e-84679b783742",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "register new customer without insurance",
              "fullTitle": "Suite register new customer without insurance",
              "timedOut": false,
              "duration": 146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n        var newCustomer, getNameTextField, getDateTextField, getRegisterButton, getAlertMsg;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    newCustomer = {\n                        name: 'New Customer',\n                        dateActivated: '18/02/2021',\n                    };\n                    return [4 /*yield*/, driver.wait(selenium_webdriver_1.until.elementLocated(selenium_webdriver_1.By.id('customer-name')), 10000)];\n                case 1:\n                    _a.sent();\n                    return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.css('#customer-name'))];\n                case 2:\n                    getNameTextField = _a.sent();\n                    return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.css('#date-activated'))];\n                case 3:\n                    getDateTextField = _a.sent();\n                    getNameTextField.sendKeys(newCustomer.name);\n                    getDateTextField.sendKeys(newCustomer.dateActivated);\n                    return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.css(\"button[type='submit']\"))];\n                case 4:\n                    getRegisterButton = _a.sent();\n                    return [4 /*yield*/, getRegisterButton.click()];\n                case 5:\n                    _a.sent();\n                    return [4 /*yield*/, driver\n                            .findElement(selenium_webdriver_1.By.className('alert'))\n                            .getText()];\n                case 6:\n                    getAlertMsg = _a.sent();\n                    assert.equal(getAlertMsg, 'Please fill all fields.', 'Got blank field(s) in the form');\n                    return [2 /*return*/];\n            }\n        });\n    });",
              "err": {},
              "uuid": "5621b249-4c3f-4e7c-be62-8beacdc6fd14",
              "parentUUID": "22391d27-3936-41eb-ba9e-84679b783742",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "register new customer with all valid information",
              "fullTitle": "Suite register new customer with all valid information",
              "timedOut": false,
              "duration": 1003,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n        var getInsuranceNameTextField, getRegisterButton, currentUrl;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.css('#insurance-name'))];\n                case 1:\n                    getInsuranceNameTextField = _a.sent();\n                    getInsuranceNameTextField.sendKeys('new insurance');\n                    return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.css(\"button[type='submit']\"))];\n                case 2:\n                    getRegisterButton = _a.sent();\n                    return [4 /*yield*/, getRegisterButton.click()];\n                case 3:\n                    _a.sent();\n                    return [4 /*yield*/, driver.wait(selenium_webdriver_1.until.urlIs(\n                        // `https://angular-e2e.herokuapp.com/agent/${agentID}`,\n                        \"http://localhost:4200/agent/\" + agentID), 15000)];\n                case 4:\n                    _a.sent();\n                    return [4 /*yield*/, driver.getCurrentUrl()];\n                case 5:\n                    currentUrl = _a.sent();\n                    assert.equal(\n                    // `https://angular-e2e.herokuapp.com/agent/${agentID}`,\n                    \"http://localhost:4200/agent/\" + agentID, currentUrl, 'Valid credentials keyed in and redirect');\n                    return [2 /*return*/];\n            }\n        });\n    });",
              "err": {},
              "uuid": "f00da9fd-5d8e-425d-8474-e4f4d39b659f",
              "parentUUID": "22391d27-3936-41eb-ba9e-84679b783742",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Logout",
              "fullTitle": "Suite Logout",
              "timedOut": false,
              "duration": 91,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n        var getLogoutButton, getLoginButton, _a, _b, _c;\n        return __generator(this, function (_d) {\n            switch (_d.label) {\n                case 0: return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.xpath('/html[1]/body[1]/app-root[1]/nav[1]/ul[2]/li[1]/a[1]'))];\n                case 1:\n                    getLogoutButton = _d.sent();\n                    return [4 /*yield*/, getLogoutButton.click()];\n                case 2:\n                    _d.sent();\n                    return [4 /*yield*/, driver.findElement(selenium_webdriver_1.By.id('login'))];\n                case 3:\n                    getLoginButton = _d.sent();\n                    return [4 /*yield*/, driver.wait(selenium_webdriver_1.until.elementLocated(selenium_webdriver_1.By.id('login')), 10000)];\n                case 4:\n                    _d.sent();\n                    _b = (_a = assert).equal;\n                    _c = [true];\n                    return [4 /*yield*/, getLoginButton.isDisplayed()];\n                case 5:\n                    _b.apply(_a, _c.concat([_d.sent(), 'Logout Successfully']));\n                    return [2 /*return*/];\n            }\n        });\n    });",
              "err": {},
              "uuid": "2b7d3870-5d76-44a3-b7aa-8c8da5ef6936",
              "parentUUID": "22391d27-3936-41eb-ba9e-84679b783742",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6d8c6650-e037-46c0-b7d7-51e051196331",
            "b23925f7-8b8f-48fb-b9d1-c1408ec35314",
            "55e002d0-51cc-4c7c-a58e-215ba9a8261d",
            "219b98ed-f2ce-4834-9c4e-d51633dc5c33",
            "5621b249-4c3f-4e7c-be62-8beacdc6fd14",
            "f00da9fd-5d8e-425d-8474-e4f4d39b659f",
            "2b7d3870-5d76-44a3-b7aa-8c8da5ef6936"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7828,
          "root": false,
          "rootEmpty": false,
          "_timeout": 90000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 90000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportDir": "ReportDirectory",
        "": true
      },
      "version": "5.1.0"
    }
  }
}